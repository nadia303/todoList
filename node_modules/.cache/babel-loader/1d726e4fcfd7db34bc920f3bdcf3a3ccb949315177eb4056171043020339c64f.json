{"ast":null,"code":"// Part 1\nimport { createSlice } from \"@reduxjs/toolkit\";\n\n// Part 2\n\nconst initialState = {\n  projectIssues: []\n};\n\n// Part 3\nexport const issueSlice = createSlice({\n  name: 'issue',\n  initialState,\n  reducers: {\n    addIssue: (state, action) => {\n      state.projectIssues = [...state.projectIssues, action.payload];\n    }\n  }\n});\n\n// Part 4\nexport const {\n  addIssue\n} = issueSlice.actions;\nexport default issueSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","projectIssues","issueSlice","name","reducers","addIssue","state","action","payload","actions","reducer"],"sources":["/Users/apikosoftwareproperty792/Desktop/Work/TodoProject/src/redux/IssueReducer.ts"],"sourcesContent":["// Part 1\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\n\n// Part 2\nexport interface IssueInitialState {\n    projectIssues: string[]\n}\nconst initialState: IssueInitialState = {\n    projectIssues: []\n}\n\n// Part 3\nexport const issueSlice = createSlice({\n    name: 'issue',\n    initialState,\n    reducers: {\n        addIssue: (state, action: PayloadAction<string>) => {\n            state.projectIssues = [...state.projectIssues, action.payload]\n        }\n    }\n})\n\n// Part 4\nexport const { addIssue } = issueSlice.actions\nexport default issueSlice.reducer\n"],"mappings":"AAAA;AACA,SAASA,WAAW,QAAuB,kBAAkB;;AAE7D;;AAIA,MAAMC,YAA+B,GAAG;EACpCC,aAAa,EAAE;AACnB,CAAC;;AAED;AACA,OAAO,MAAMC,UAAU,GAAGH,WAAW,CAAC;EAClCI,IAAI,EAAE,OAAO;EACbH,YAAY;EACZI,QAAQ,EAAE;IACNC,QAAQ,EAAEA,CAACC,KAAK,EAAEC,MAA6B,KAAK;MAChDD,KAAK,CAACL,aAAa,GAAG,CAAC,GAAGK,KAAK,CAACL,aAAa,EAAEM,MAAM,CAACC,OAAO,CAAC;IAClE;EACJ;AACJ,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EAAEH;AAAS,CAAC,GAAGH,UAAU,CAACO,OAAO;AAC9C,eAAeP,UAAU,CAACQ,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}