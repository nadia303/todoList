{"ast":null,"code":"var _jsxFileName = \"/Users/apikosoftwareproperty792/Desktop/Work/TodoProject/my-app/src/pages/TodoList/TodoList.tsx\";\nimport React from \"react\";\nimport { Space, Typography, Button, Divider } from \"antd\";\nimport { DeleteOutlined, EditOutlined } from \"@ant-design/icons\";\n// import { Card } from \"../Card\";\n// import { DeleteOutlined, EditOutlined } from \"@ant-design/icons\";\n// import { useUpdateBoard } from \"../../hooks/useUpdateBoard\";\n// import { ITodo } from \"../../types\";\n// import { useDeleteBoard } from \"../../hooks/useDeleteBoard\";\n// import { TodoStatus } from \"../../types/status\";\n// import { AddEditBoardTitle } from \"../AddEditBoardTile\";\n// import { useUpdateTodo } from \"../../hooks/useUpdateTodo\";\n// import { getTodosByStatus } from \"../../helpers/getTodosByStatus\";\n// import { DeleteConfirmationModal } from \"../DeleteConfirmationModal/DeleteConfirmationModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Title\n} = Typography;\nexport const TodoList = () => {\n  //   const [todoColumns, setTodoColumns] = useState({\n  //     todo: getTodosByStatus(initialTodos, TodoStatus.TODO),\n  //     in_progress: getTodosByStatus(initialTodos, TodoStatus.IN_PROGRESS),\n  //     done: getTodosByStatus(initialTodos, TodoStatus.DONE),\n  //   });\n  //   const [isEditModeBoard, setIsEditModeBoard] = useState(false);\n  //   const [isDeleteModalVisible, setIsDeleteModalVisible] = useState(false);\n  //   const { update: updateBoard, isPending: isLoadingUpdate } = useUpdateBoard();\n  //   const { remove, isPending: isLoadingDelete } = useDeleteBoard();\n  //   const { update: updateTodo } = useUpdateTodo();\n  //   const [form] = Form.useForm();\n\n  //   useEffect(() => {\n  //     setTodoColumns({\n  //       todo: getTodosByStatus(initialTodos, TodoStatus.TODO),\n  //       in_progress: getTodosByStatus(initialTodos, TodoStatus.IN_PROGRESS),\n  //       done: getTodosByStatus(initialTodos, TodoStatus.DONE),\n  //     });\n  //   }, [initialTodos]);\n\n  //   const handleEdit = () => {\n  //     setIsEditModeBoard(true);\n  //     form.setFieldsValue({\n  //       name: boardName,\n  //     });\n  //   };\n\n  //   const handleDelete = () => {\n  //     setIsDeleteModalVisible(true);\n  //   };\n\n  //   const handleConfirmDelete = () => {\n  //     remove(boardId);\n  //     setIsDeleteModalVisible(false);\n  //   };\n\n  //   const handleCancelDelete = () => {\n  //     setIsDeleteModalVisible(false);\n  //   };\n\n  //   const handleUpdate = (data: { name: string }) => {\n  //     updateBoard({ name: data.name, boardId });\n  //     setIsEditModeBoard(false);\n  //   };\n\n  //\n\n  //   if (isLoadingUpdate || isLoadingDelete) {\n  //     return <Spin size=\"large\" />;\n  //   }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flex: \"1\",\n      flexDirection: \"column\",\n      height: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Space, {\n        direction: \"horizontal\",\n        align: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          level: 3,\n          underline: true,\n          style: {\n            margin: 0\n          },\n          children: boardName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Space, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"link\",\n            icon: /*#__PURE__*/_jsxDEV(EditOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 21\n            }, this)\n            // onClick={handleEdit}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"link\",\n            icon: /*#__PURE__*/_jsxDEV(DeleteOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 21\n            }, this)\n            // onClick={handleDelete}\n            ,\n            style: {\n              color: \"#ff4d4f\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        style: {\n          margin: \"8px 0\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_c = TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","Space","Typography","Button","Divider","DeleteOutlined","EditOutlined","jsxDEV","_jsxDEV","Fragment","_Fragment","Title","TodoList","style","display","flex","flexDirection","height","children","direction","align","level","underline","margin","boardName","fileName","_jsxFileName","lineNumber","columnNumber","type","icon","color","_c","$RefreshReg$"],"sources":["/Users/apikosoftwareproperty792/Desktop/Work/TodoProject/my-app/src/pages/TodoList/TodoList.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  Col,\n  Form,\n  Row,\n  Space,\n  Typography,\n  Button,\n  Divider,\n  Card as BasicCard,\n  Spin,\n} from \"antd\";\nimport { DeleteOutlined, EditOutlined } from \"@ant-design/icons\";\n// import { Card } from \"../Card\";\n// import { DeleteOutlined, EditOutlined } from \"@ant-design/icons\";\n// import { useUpdateBoard } from \"../../hooks/useUpdateBoard\";\n// import { ITodo } from \"../../types\";\n// import { useDeleteBoard } from \"../../hooks/useDeleteBoard\";\n// import { TodoStatus } from \"../../types/status\";\n// import { AddEditBoardTitle } from \"../AddEditBoardTile\";\n// import { useUpdateTodo } from \"../../hooks/useUpdateTodo\";\n// import { getTodosByStatus } from \"../../helpers/getTodosByStatus\";\n// import { DeleteConfirmationModal } from \"../DeleteConfirmationModal/DeleteConfirmationModal\";\n\nconst { Title } = Typography;\n\nexport const TodoList: React.FC = () => {\n  //   const [todoColumns, setTodoColumns] = useState({\n  //     todo: getTodosByStatus(initialTodos, TodoStatus.TODO),\n  //     in_progress: getTodosByStatus(initialTodos, TodoStatus.IN_PROGRESS),\n  //     done: getTodosByStatus(initialTodos, TodoStatus.DONE),\n  //   });\n  //   const [isEditModeBoard, setIsEditModeBoard] = useState(false);\n  //   const [isDeleteModalVisible, setIsDeleteModalVisible] = useState(false);\n  //   const { update: updateBoard, isPending: isLoadingUpdate } = useUpdateBoard();\n  //   const { remove, isPending: isLoadingDelete } = useDeleteBoard();\n  //   const { update: updateTodo } = useUpdateTodo();\n  //   const [form] = Form.useForm();\n\n  //   useEffect(() => {\n  //     setTodoColumns({\n  //       todo: getTodosByStatus(initialTodos, TodoStatus.TODO),\n  //       in_progress: getTodosByStatus(initialTodos, TodoStatus.IN_PROGRESS),\n  //       done: getTodosByStatus(initialTodos, TodoStatus.DONE),\n  //     });\n  //   }, [initialTodos]);\n\n  //   const handleEdit = () => {\n  //     setIsEditModeBoard(true);\n  //     form.setFieldsValue({\n  //       name: boardName,\n  //     });\n  //   };\n\n  //   const handleDelete = () => {\n  //     setIsDeleteModalVisible(true);\n  //   };\n\n  //   const handleConfirmDelete = () => {\n  //     remove(boardId);\n  //     setIsDeleteModalVisible(false);\n  //   };\n\n  //   const handleCancelDelete = () => {\n  //     setIsDeleteModalVisible(false);\n  //   };\n\n  //   const handleUpdate = (data: { name: string }) => {\n  //     updateBoard({ name: data.name, boardId });\n  //     setIsEditModeBoard(false);\n  //   };\n\n  //\n\n  //   if (isLoadingUpdate || isLoadingDelete) {\n  //     return <Spin size=\"large\" />;\n  //   }\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flex: \"1\",\n        flexDirection: \"column\",\n        height: \"100%\",\n      }}\n    >\n      <>\n        <Space direction=\"horizontal\" align=\"center\">\n          <Title level={3} underline style={{ margin: 0 }}>\n            {boardName}\n          </Title>\n          <Space>\n            <Button\n              type=\"link\"\n              icon={<EditOutlined />}\n              // onClick={handleEdit}\n            />\n            <Button\n              type=\"link\"\n              icon={<DeleteOutlined />}\n              // onClick={handleDelete}\n              style={{ color: \"#ff4d4f\" }}\n            />\n          </Space>\n        </Space>\n        <Divider style={{ margin: \"8px 0\" }} />\n      </>\n      {/* <Row gutter={[16, 16]}>\n        <Col xs={24} sm={12} md={8}>\n          <Card\n            boardId={boardId}\n            title=\"TO DO\"\n            todos={todoColumns.todo}\n            status={TodoStatus.TODO}\n          />\n        </Col>\n        <Col xs={24} sm={12} md={8}>\n          <Card\n            boardId={boardId}\n            title=\"IN PROGRESS\"\n            todos={todoColumns.in_progress}\n            status={TodoStatus.IN_PROGRESS}\n          />\n        </Col>\n        <Col xs={24} sm={12} md={8}>\n          <Card\n            boardId={boardId}\n            title=\"DONE\"\n            todos={todoColumns.done}\n            status={TodoStatus.DONE}\n          />\n        </Col>\n      </Row> */}\n      {/* <DeleteConfirmationModal\n        isVisible={isDeleteModalVisible}\n        onCancel={handleCancelDelete}\n        onConfirm={handleConfirmDelete}\n        modalInformation=\"Are you sure you want to delete this board?\"\n      /> */}\n    </div>\n  );\n};\n"],"mappings":";AAAA,OAAOA,KAAK,MAA+B,OAAO;AAClD,SAIEC,KAAK,EACLC,UAAU,EACVC,MAAM,EACNC,OAAO,QAGF,MAAM;AACb,SAASC,cAAc,EAAEC,YAAY,QAAQ,mBAAmB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEA,MAAM;EAAEC;AAAM,CAAC,GAAGT,UAAU;AAE5B,OAAO,MAAMU,QAAkB,GAAGA,CAAA,KAAM;EACtC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;;EAEA,oBACEJ,OAAA;IACEK,KAAK,EAAE;MACLC,OAAO,EAAE,MAAM;MACfC,IAAI,EAAE,GAAG;MACTC,aAAa,EAAE,QAAQ;MACvBC,MAAM,EAAE;IACV,CAAE;IAAAC,QAAA,eAEFV,OAAA,CAAAE,SAAA;MAAAQ,QAAA,gBACEV,OAAA,CAACP,KAAK;QAACkB,SAAS,EAAC,YAAY;QAACC,KAAK,EAAC,QAAQ;QAAAF,QAAA,gBAC1CV,OAAA,CAACG,KAAK;UAACU,KAAK,EAAE,CAAE;UAACC,SAAS;UAACT,KAAK,EAAE;YAAEU,MAAM,EAAE;UAAE,CAAE;UAAAL,QAAA,EAC7CM;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eACRpB,OAAA,CAACP,KAAK;UAAAiB,QAAA,gBACJV,OAAA,CAACL,MAAM;YACL0B,IAAI,EAAC,MAAM;YACXC,IAAI,eAAEtB,OAAA,CAACF,YAAY;cAAAmB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;YACrB;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,eACFpB,OAAA,CAACL,MAAM;YACL0B,IAAI,EAAC,MAAM;YACXC,IAAI,eAAEtB,OAAA,CAACH,cAAc;cAAAoB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;YACvB;YAAA;YACAf,KAAK,EAAE;cAAEkB,KAAK,EAAE;YAAU;UAAE;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACRpB,OAAA,CAACJ,OAAO;QAACS,KAAK,EAAE;UAAEU,MAAM,EAAE;QAAQ;MAAE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eACvC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAiCA,CAAC;AAEV,CAAC;AAACI,EAAA,GApHWpB,QAAkB;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}