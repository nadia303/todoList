{"ast":null,"code":"var _jsxFileName = \"/Users/apikosoftwareproperty792/Desktop/Work/TodoProject/src/components/Filter/Filter.tsx\",\n  _s = $RefreshSig$();\nimport { Radio } from \"antd\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Filter = ({\n  todos\n}) => {\n  _s();\n  const [filterType, setFilterType] = useState('all');\n  const getFilteredTodos = () => {\n    switch (filterType) {\n      case 'completed':\n        return todos.filter(todo => todo.status.completed);\n      case 'current':\n        return todoList.filter(todo => !todo.completed);\n      default:\n        return todoList;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Radio.Group, {\n    children: [/*#__PURE__*/_jsxDEV(Radio.Button, {\n      value: \"all\",\n      children: \"All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Radio.Button, {\n      value: \"completed\",\n      children: \"Completed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Radio.Button, {\n      value: \"current\",\n      children: \"Not Completed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(Filter, \"st+WSwhofKpQCYAKPWTiCrTMyIE=\");\n_c = Filter;\nvar _c;\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"names":["Radio","useState","jsxDEV","_jsxDEV","Filter","todos","_s","filterType","setFilterType","getFilteredTodos","filter","todo","status","completed","todoList","Group","children","Button","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/apikosoftwareproperty792/Desktop/Work/TodoProject/src/components/Filter/Filter.tsx"],"sourcesContent":["import { Radio } from \"antd\"\nimport { useState } from \"react\"\nimport { ITodo } from \"../../types/todo\"\n\ninterface FilterProps {\n    todos: ITodo[]\n}\n\nexport const Filter: React.FC<FilterProps> = ({ todos }) => {\n    const [filterType, setFilterType] = useState('all')\n\n    const getFilteredTodos = () => {\n        switch (filterType) {\n            case 'completed':\n                return todos.filter(todo => todo.status.completed)\n            case 'current':\n                return todoList.filter(todo => !todo.completed)\n            default:\n                return todoList\n        }\n    }\n    return (\n        <Radio.Group\n        // onChange={(e) => setFilterType(e.target.value)}\n        // value={filterType}\n        >\n            <Radio.Button value=\"all\">All</Radio.Button>\n            <Radio.Button value=\"completed\">Completed</Radio.Button>\n            <Radio.Button value=\"current\">Not Completed</Radio.Button>\n        </Radio.Group>\n\n    )\n}"],"mappings":";;AAAA,SAASA,KAAK,QAAQ,MAAM;AAC5B,SAASC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAOhC,OAAO,MAAMC,MAA6B,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACxD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMQ,gBAAgB,GAAGA,CAAA,KAAM;IAC3B,QAAQF,UAAU;MACd,KAAK,WAAW;QACZ,OAAOF,KAAK,CAACK,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,MAAM,CAACC,SAAS,CAAC;MACtD,KAAK,SAAS;QACV,OAAOC,QAAQ,CAACJ,MAAM,CAACC,IAAI,IAAI,CAACA,IAAI,CAACE,SAAS,CAAC;MACnD;QACI,OAAOC,QAAQ;IACvB;EACJ,CAAC;EACD,oBACIX,OAAA,CAACH,KAAK,CAACe,KAAK;IAAAC,QAAA,gBAIRb,OAAA,CAACH,KAAK,CAACiB,MAAM;MAACC,KAAK,EAAC,KAAK;MAAAF,QAAA,EAAC;IAAG;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAc,CAAC,eAC5CnB,OAAA,CAACH,KAAK,CAACiB,MAAM;MAACC,KAAK,EAAC,WAAW;MAAAF,QAAA,EAAC;IAAS;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAc,CAAC,eACxDnB,OAAA,CAACH,KAAK,CAACiB,MAAM;MAACC,KAAK,EAAC,SAAS;MAAAF,QAAA,EAAC;IAAa;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAc,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAGtB,CAAC;AAAAhB,EAAA,CAxBYF,MAA6B;AAAAmB,EAAA,GAA7BnB,MAA6B;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}