{"ast":null,"code":"var _jsxFileName = \"/Users/apikosoftwareproperty792/Desktop/Work/TodoProject/src/pages/TodoList/TodoList.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Col, Row, Space, Typography, Divider } from \"antd\";\nimport { Card } from \"../../components/Card\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// import { Card } from \"../Card\";\n// import { DeleteOutlined, EditOutlined } from \"@ant-design/icons\";\n// import { useUpdateBoard } from \"../../hooks/useUpdateBoard\";\n// import { ITodo } from \"../../types\";\n// import { useDeleteBoard } from \"../../hooks/useDeleteBoard\";\n// import { TodoStatus } from \"../../types/status\";\n// import { AddEditBoardTitle } from \"../AddEditBoardTile\";\n// import { useUpdateTodo } from \"../../hooks/useUpdateTodo\";\n// import { getTodosByStatus } from \"../../helpers/getTodosByStatus\";\n// import { DeleteConfirmationModal } from \"../DeleteConfirmationModal/DeleteConfirmationModal\";\n\nconst {\n  Title\n} = Typography;\nexport const TodoList = () => {\n  _s();\n  //   const [todoColumns, setTodoColumns] = useState({\n  //     todo: getTodosByStatus(initialTodos, TodoStatus.TODO),\n  //     in_progress: getTodosByStatus(initialTodos, TodoStatus.IN_PROGRESS),\n  //     done: getTodosByStatus(initialTodos, TodoStatus.DONE),\n  //   });\n  //   const [isEditModeBoard, setIsEditModeBoard] = useState(false);\n  //   const [isDeleteModalVisible, setIsDeleteModalVisible] = useState(false);\n  //   const { update: updateBoard, isPending: isLoadingUpdate } = useUpdateBoard();\n  //   const { remove, isPending: isLoadingDelete } = useDeleteBoard();\n  //   const { update: updateTodo } = useUpdateTodo();\n  //   const [form] = Form.useForm();\n\n  //   useEffect(() => {\n  //     setTodoColumns({\n  //       todo: getTodosByStatus(initialTodos, TodoStatus.TODO),\n  //       in_progress: getTodosByStatus(initialTodos, TodoStatus.IN_PROGRESS),\n  //       done: getTodosByStatus(initialTodos, TodoStatus.DONE),\n  //     });\n  //   }, [initialTodos]);\n\n  //   const handleEdit = () => {\n  //     setIsEditModeBoard(true);\n  //     form.setFieldsValue({\n  //       name: boardName,\n  //     });\n  //   };\n\n  //   const handleDelete = () => {\n  //     setIsDeleteModalVisible(true);\n  //   };\n\n  //   const handleConfirmDelete = () => {\n  //     remove(boardId);\n  //     setIsDeleteModalVisible(false);\n  //   };\n\n  //   const handleCancelDelete = () => {\n  //     setIsDeleteModalVisible(false);\n  //   };\n\n  //   const handleUpdate = (data: { name: string }) => {\n  //     updateBoard({ name: data.name, boardId });\n  //     setIsEditModeBoard(false);\n  //   };\n\n  //\n\n  //   if (isLoadingUpdate || isLoadingDelete) {\n  //     return <Spin size=\"large\" />;\n  //   }\n\n  const todos = useSelector(state => state.todos);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flex: \"1\",\n      flexDirection: \"column\",\n      height: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Space, {\n        direction: \"horizontal\",\n        align: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Title, {\n          level: 3,\n          underline: true,\n          style: {\n            margin: 0\n          },\n          children: \"Todo List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        style: {\n          margin: \"8px 0\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(Row, {\n      gutter: [16, 16],\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        sm: 12,\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Card\n        // boardId={boardId}\n        , {\n          title: \"NOT COMPLETED\"\n          // todos={todoColumns.todo}\n          // status={TodoStatus.TODO}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        sm: 12,\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: \"COMPLETED\"\n          // todos={todoColumns.in_progress}\n          // status={TodoStatus.IN_PROGRESS}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoList, \"yf5/CXitEfCS89mS1QxI4IUHBGo=\", false, function () {\n  return [useSelector];\n});\n_c = TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","Col","Row","Space","Typography","Divider","Card","useSelector","jsxDEV","_jsxDEV","Fragment","_Fragment","Title","TodoList","_s","todos","state","style","display","flex","flexDirection","height","children","direction","align","level","underline","margin","fileName","_jsxFileName","lineNumber","columnNumber","gutter","xs","sm","md","title","_c","$RefreshReg$"],"sources":["/Users/apikosoftwareproperty792/Desktop/Work/TodoProject/src/pages/TodoList/TodoList.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport {\n  Col,\n  Form,\n  Row,\n  Space,\n  Typography,\n  Button,\n  Divider,\n  Card as BasicCard,\n  Spin,\n} from \"antd\"\nimport { DeleteOutlined, EditOutlined } from \"@ant-design/icons\"\nimport { Card } from \"../../components/Card\"\nimport { useSelector } from \"react-redux\"\nimport { RootState } from \"../../redux\"\n// import { Card } from \"../Card\";\n// import { DeleteOutlined, EditOutlined } from \"@ant-design/icons\";\n// import { useUpdateBoard } from \"../../hooks/useUpdateBoard\";\n// import { ITodo } from \"../../types\";\n// import { useDeleteBoard } from \"../../hooks/useDeleteBoard\";\n// import { TodoStatus } from \"../../types/status\";\n// import { AddEditBoardTitle } from \"../AddEditBoardTile\";\n// import { useUpdateTodo } from \"../../hooks/useUpdateTodo\";\n// import { getTodosByStatus } from \"../../helpers/getTodosByStatus\";\n// import { DeleteConfirmationModal } from \"../DeleteConfirmationModal/DeleteConfirmationModal\";\n\nconst { Title } = Typography\n\nexport const TodoList: React.FC = () => {\n  //   const [todoColumns, setTodoColumns] = useState({\n  //     todo: getTodosByStatus(initialTodos, TodoStatus.TODO),\n  //     in_progress: getTodosByStatus(initialTodos, TodoStatus.IN_PROGRESS),\n  //     done: getTodosByStatus(initialTodos, TodoStatus.DONE),\n  //   });\n  //   const [isEditModeBoard, setIsEditModeBoard] = useState(false);\n  //   const [isDeleteModalVisible, setIsDeleteModalVisible] = useState(false);\n  //   const { update: updateBoard, isPending: isLoadingUpdate } = useUpdateBoard();\n  //   const { remove, isPending: isLoadingDelete } = useDeleteBoard();\n  //   const { update: updateTodo } = useUpdateTodo();\n  //   const [form] = Form.useForm();\n\n  //   useEffect(() => {\n  //     setTodoColumns({\n  //       todo: getTodosByStatus(initialTodos, TodoStatus.TODO),\n  //       in_progress: getTodosByStatus(initialTodos, TodoStatus.IN_PROGRESS),\n  //       done: getTodosByStatus(initialTodos, TodoStatus.DONE),\n  //     });\n  //   }, [initialTodos]);\n\n  //   const handleEdit = () => {\n  //     setIsEditModeBoard(true);\n  //     form.setFieldsValue({\n  //       name: boardName,\n  //     });\n  //   };\n\n  //   const handleDelete = () => {\n  //     setIsDeleteModalVisible(true);\n  //   };\n\n  //   const handleConfirmDelete = () => {\n  //     remove(boardId);\n  //     setIsDeleteModalVisible(false);\n  //   };\n\n  //   const handleCancelDelete = () => {\n  //     setIsDeleteModalVisible(false);\n  //   };\n\n  //   const handleUpdate = (data: { name: string }) => {\n  //     updateBoard({ name: data.name, boardId });\n  //     setIsEditModeBoard(false);\n  //   };\n\n  //\n\n  //   if (isLoadingUpdate || isLoadingDelete) {\n  //     return <Spin size=\"large\" />;\n  //   }\n\n\n  const todos = useSelector((state: RootState) => state.todos)\n\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flex: \"1\",\n        flexDirection: \"column\",\n        height: \"100%\",\n      }}\n    >\n      <>\n        <Space direction=\"horizontal\" align=\"center\">\n          <Title level={3} underline style={{ margin: 0 }}>\n            Todo List\n          </Title>\n        </Space>\n        <Divider style={{ margin: \"8px 0\" }} />\n      </>\n      <Row gutter={[16, 16]}>\n        <Col xs={24} sm={12} md={8}>\n          <Card\n            // boardId={boardId}\n            title=\"NOT COMPLETED\"\n          // todos={todoColumns.todo}\n          // status={TodoStatus.TODO}\n          />\n        </Col>\n        <Col xs={24} sm={12} md={8}>\n          <Card\n            title=\"COMPLETED\"\n          // todos={todoColumns.in_progress}\n          // status={TodoStatus.IN_PROGRESS}\n          />\n        </Col>\n      </Row>\n      {/* <DeleteConfirmationModal\n        isVisible={isDeleteModalVisible}\n        onCancel={handleCancelDelete}\n        onConfirm={handleConfirmDelete}\n        modalInformation=\"Are you sure you want to delete this board?\"\n      /> */}\n    </div>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}