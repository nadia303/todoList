{"ast":null,"code":"var _jsxFileName = \"/Users/apikosoftwareproperty792/Desktop/Work/TodoProject/src/components/Todo/Todo.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport { Button, Space, Typography, Form, Checkbox, Input } from \"antd\";\nimport { CheckOutlined, CloseOutlined, DeleteOutlined, EditOutlined } from \"@ant-design/icons\";\nimport { TodoStatus } from \"../../types/status\";\nimport { deleteTodo, updateTodo } from \"../../redux/TodoReducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { DeleteConfirmationModal } from \"../DeleteConfirmationModal\";\nimport { decrementCompleted, decrementNotCompleted } from \"../../redux/CounterReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Todo = ({\n  name,\n  status,\n  todoId\n}) => {\n  _s();\n  const [isEditTodo, setIsEditTodo] = useState(false);\n  const [isDeleteModalVisible, setIsDeleteModalVisible] = useState(false);\n  const [isHovered, setIsHovered] = useState(false);\n  const {\n    maxTodoLength\n  } = useSelector(state => state.todos);\n  const dispatch = useDispatch();\n  const [form] = Form.useForm();\n  const editableAreaRef = useRef(null);\n  useEffect(() => {\n    const handleClickOutside = e => {\n      if (editableAreaRef.current && !editableAreaRef.current.contains(e.target)) {\n        // Click outside the Todo component\n        setIsEditTodo(false);\n        onClickOutside();\n      }\n    };\n    if (isEditTodo) {\n      document.addEventListener(\"click\", handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside);\n    };\n  }, [isEditTodo, onClickOutside]);\n\n  // const handleClickOutside = (e: MouseEvent): void => {\n  //   if (editableAreaRef.current && !editableAreaRef.current.contains(e.target as Node)) {\n  //     // Click outside the editable area\n  //     setIsEditTodo(false)\n  //   }\n  // }\n\n  const handleEdit = () => {\n    setIsEditTodo(true);\n    console.log({\n      name\n    });\n    form.setFieldsValue({\n      name\n    });\n    const result = form.getFieldValue(name);\n    console.log({\n      result\n    });\n  };\n  const handleDelete = () => {\n    setIsDeleteModalVisible(true);\n  };\n  const handleConfirmDelete = () => {\n    dispatch(deleteTodo({\n      id: todoId\n    }));\n    status === TodoStatus.COMPLETED ? dispatch(decrementCompleted()) : dispatch(decrementNotCompleted());\n    setIsDeleteModalVisible(false);\n  };\n  const handleCancelDelete = () => {\n    setIsDeleteModalVisible(false);\n  };\n  const handleMouseEnter = () => {\n    setIsHovered(true);\n  };\n  const handleMouseLeave = () => {\n    setIsHovered(false);\n  };\n  const handleSaveEdit = () => {\n    setIsEditTodo(false);\n  };\n  const hadleCancelEdit = () => {\n    setIsEditTodo(false);\n  };\n  const onChange = e => {\n    const status = e.target.checked ? TodoStatus.COMPLETED : TodoStatus.NOT_COMPLETED;\n    dispatch(updateTodo({\n      id: todoId,\n      status\n    }));\n  };\n  const handleSubmit = data => {\n    console.log(\" handle submit\");\n    console.log({\n      data\n    });\n    dispatch(updateTodo({\n      id: todoId,\n      ...data\n    }));\n    setIsEditTodo(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Space, {\n      direction: \"horizontal\",\n      size: \"middle\",\n      onMouseEnter: handleMouseEnter,\n      onMouseLeave: handleMouseLeave,\n      ref: editableAreaRef,\n      style: {\n        display: 'flex',\n        alignItems: \"center\",\n        // justifyContent: \"space-between\",\n        padding: \"16px\",\n        marginBottom: '12px',\n        border: \"1px solid #ccc\",\n        borderRadius: \"8px\",\n        background: \"#e6f7ff\",\n        width: \"400px\"\n      },\n      children: isEditTodo ? /*#__PURE__*/_jsxDEV(Form, {\n        form: form,\n        name: \"validateOnly\",\n        layout: \"vertical\",\n        autoComplete: \"off\",\n        onFinish: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Name\",\n          name: \"name\",\n          rules: [{\n            required: true,\n            message: \"Please enter todo name\"\n          }, {\n            max: maxTodoLength,\n            message: `Todo text exceeds the maximum allowed length of ${maxTodoLength} characters`\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Space, {\n          wrap: true,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            htmlType: \"submit\",\n            icon: /*#__PURE__*/_jsxDEV(CheckOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"link\",\n            onClick: hadleCancelEdit,\n            icon: /*#__PURE__*/_jsxDEV(CloseOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 67\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          onChange: onChange,\n          checked: status === TodoStatus.COMPLETED\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography.Title, {\n          level: 5,\n          style: {\n            color: \"#1890ff\",\n            margin: 0\n          },\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), isHovered && /*#__PURE__*/_jsxDEV(Space, {\n          wrap: true,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"link\",\n            onClick: handleEdit,\n            children: /*#__PURE__*/_jsxDEV(EditOutlined, {\n              style: {\n                color: \"#1890ff\",\n                fontSize: \"16px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"link\",\n            onClick: handleDelete,\n            children: /*#__PURE__*/_jsxDEV(DeleteOutlined, {\n              style: {\n                color: \"#ff4d4f\",\n                fontSize: \"16px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeleteConfirmationModal, {\n      isVisible: isDeleteModalVisible,\n      onCancel: handleCancelDelete,\n      onConfirm: handleConfirmDelete,\n      modalInformation: \"Are you sure you want to delete this todo?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Todo, \"oeliMYNhLRrp56dN5xRMoZbTjK8=\", false, function () {\n  return [useSelector, useDispatch, Form.useForm];\n});\n_c = Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["useEffect","useRef","useState","Button","Space","Typography","Form","Checkbox","Input","CheckOutlined","CloseOutlined","DeleteOutlined","EditOutlined","TodoStatus","deleteTodo","updateTodo","useDispatch","useSelector","DeleteConfirmationModal","decrementCompleted","decrementNotCompleted","jsxDEV","_jsxDEV","Fragment","_Fragment","Todo","name","status","todoId","_s","isEditTodo","setIsEditTodo","isDeleteModalVisible","setIsDeleteModalVisible","isHovered","setIsHovered","maxTodoLength","state","todos","dispatch","form","useForm","editableAreaRef","handleClickOutside","e","current","contains","target","onClickOutside","document","addEventListener","removeEventListener","handleEdit","console","log","setFieldsValue","result","getFieldValue","handleDelete","handleConfirmDelete","id","COMPLETED","handleCancelDelete","handleMouseEnter","handleMouseLeave","handleSaveEdit","hadleCancelEdit","onChange","checked","NOT_COMPLETED","handleSubmit","data","children","direction","size","onMouseEnter","onMouseLeave","ref","style","display","alignItems","padding","marginBottom","border","borderRadius","background","width","layout","autoComplete","onFinish","Item","label","rules","required","message","max","fileName","_jsxFileName","lineNumber","columnNumber","wrap","htmlType","icon","type","onClick","Title","level","color","margin","fontSize","isVisible","onCancel","onConfirm","modalInformation","_c","$RefreshReg$"],"sources":["/Users/apikosoftwareproperty792/Desktop/Work/TodoProject/src/components/Todo/Todo.tsx"],"sourcesContent":["import { FC, useCallback, useEffect, useRef, useState } from \"react\"\nimport { Button, Space, Typography, Form, Checkbox, CheckboxProps, Input } from \"antd\"\nimport { CheckOutlined, CloseOutlined, DeleteOutlined, EditOutlined } from \"@ant-design/icons\"\nimport { ITodo } from \"../../types/todo\"\nimport { TodoStatus } from \"../../types/status\"\nimport { deleteTodo, updateTodo } from \"../../redux/TodoReducer\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { DeleteConfirmationModal } from \"../DeleteConfirmationModal\"\nimport { RootState } from \"../../redux\"\nimport { decrementCompleted, decrementNotCompleted } from \"../../redux/CounterReducer\"\n\n\ninterface TodoProps {\n  todoId: string\n  name: string\n  status: TodoStatus\n}\n\nexport const Todo: FC<TodoProps> = ({\n  name,\n  status,\n  todoId\n}) => {\n  const [isEditTodo, setIsEditTodo] = useState(false)\n  const [isDeleteModalVisible, setIsDeleteModalVisible] = useState(false)\n  const [isHovered, setIsHovered] = useState(false)\n  const { maxTodoLength } = useSelector((state: RootState) => state.todos)\n  const dispatch = useDispatch()\n  const [form] = Form.useForm()\n  const editableAreaRef = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    const handleClickOutside = (e: MouseEvent): void => {\n      if (editableAreaRef.current && !editableAreaRef.current.contains(e.target as Node)) {\n        // Click outside the Todo component\n        setIsEditTodo(false)\n        onClickOutside()\n      }\n    }\n\n    if (isEditTodo) {\n      document.addEventListener(\"click\", handleClickOutside)\n    }\n\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside)\n    }\n  }, [isEditTodo, onClickOutside])\n\n  // const handleClickOutside = (e: MouseEvent): void => {\n  //   if (editableAreaRef.current && !editableAreaRef.current.contains(e.target as Node)) {\n  //     // Click outside the editable area\n  //     setIsEditTodo(false)\n  //   }\n  // }\n\n\n  const handleEdit = (): void => {\n    setIsEditTodo(true)\n    console.log({ name })\n\n    form.setFieldsValue({\n      name\n    })\n    const result = form.getFieldValue(name)\n    console.log({ result })\n  }\n\n  const handleDelete = (): void => {\n    setIsDeleteModalVisible(true)\n  }\n\n  const handleConfirmDelete = (): void => {\n    dispatch(deleteTodo({ id: todoId }))\n    status === TodoStatus.COMPLETED ? dispatch(decrementCompleted()) : dispatch(decrementNotCompleted())\n    setIsDeleteModalVisible(false)\n  }\n\n  const handleCancelDelete = (): void => {\n    setIsDeleteModalVisible(false)\n  }\n\n  const handleMouseEnter = (): void => {\n    setIsHovered(true)\n  }\n\n  const handleMouseLeave = (): void => {\n    setIsHovered(false)\n  }\n\n  const handleSaveEdit = (): void => {\n    setIsEditTodo(false)\n\n  }\n\n  const hadleCancelEdit = (): void => {\n    setIsEditTodo(false)\n  }\n\n  const onChange: CheckboxProps['onChange'] = (e): void => {\n    const status = e.target.checked ? TodoStatus.COMPLETED : TodoStatus.NOT_COMPLETED\n    dispatch(updateTodo({ id: todoId, status }))\n  }\n\n  const handleSubmit = (data: { data: Partial<ITodo> }): void => {\n    console.log(\" handle submit\")\n    console.log({ data })\n    dispatch(updateTodo({ id: todoId, ...data }))\n    setIsEditTodo(false)\n  }\n\n  return (\n    <>\n      <Space direction=\"horizontal\" size=\"middle\"\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n        ref={editableAreaRef}\n        style={{\n          display: 'flex',\n          alignItems: \"center\",\n          // justifyContent: \"space-between\",\n          padding: \"16px\",\n          marginBottom: '12px',\n          border: \"1px solid #ccc\",\n          borderRadius: \"8px\",\n          background: \"#e6f7ff\",\n          width: \"400px\"\n        }}\n      >\n        {isEditTodo ?\n          <Form\n            form={form}\n            name=\"validateOnly\"\n            layout=\"vertical\"\n            autoComplete=\"off\"\n            onFinish={handleSubmit}\n          >\n            <Form.Item\n              label=\"Name\"\n              name=\"name\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please enter todo name\",\n                },\n                {\n                  max: maxTodoLength,\n                  message: `Todo text exceeds the maximum allowed length of ${maxTodoLength} characters`,\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n            <Space wrap>\n              <Button htmlType=\"submit\" icon={< CheckOutlined />} />\n              <Button type=\"link\" onClick={hadleCancelEdit} icon={<CloseOutlined />} />\n            </Space>\n          </Form> :\n          <>\n            <Checkbox onChange={onChange} checked={status === TodoStatus.COMPLETED} />\n            <Typography.Title\n              level={5}\n              style={{ color: \"#1890ff\", margin: 0 }}\n            >\n              {name}\n            </Typography.Title>\n            {isHovered &&\n              <Space wrap>\n                <Button type=\"link\" onClick={handleEdit}>\n                  <EditOutlined style={{ color: \"#1890ff\", fontSize: \"16px\" }} />\n                </Button>\n                <Button type=\"link\" onClick={handleDelete}>\n                  <DeleteOutlined style={{ color: \"#ff4d4f\", fontSize: \"16px\" }} />\n                </Button>\n              </Space>\n            }\n          </>}\n      </Space>\n      <DeleteConfirmationModal\n        isVisible={isDeleteModalVisible}\n        onCancel={handleCancelDelete}\n        onConfirm={handleConfirmDelete}\n        modalInformation=\"Are you sure you want to delete this todo?\"\n      />\n    </>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}