{"ast":null,"code":"var _jsxFileName = \"/Users/apikosoftwareproperty792/Desktop/Work/TodoProject/src/components/Todo/Todo.tsx\",\n  _s = $RefreshSig$();\nimport { useCallback, useState } from \"react\";\nimport { Button, Space, Typography, Form, Checkbox } from \"antd\";\nimport { DeleteOutlined, EditOutlined } from \"@ant-design/icons\";\nimport { TodoStatus } from \"../../types/status\";\nimport { deleteTodo, updateTodo } from \"../../redux/TodoReducer\";\nimport { useDispatch } from \"react-redux\";\nimport { DeleteConfirmationModal } from \"../DeleteConfirmationModal\";\nimport { decrementCompleted, decrementNotCompleted } from \"../../redux/CounterReducer\";\nimport { AddEditTodo } from \"../AddEditTodo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Todo = ({\n  name,\n  status,\n  todoId\n}) => {\n  _s();\n  const [isEditTodo, setIsEditTodo] = useState(false);\n  const [isDeleteModalVisible, setIsDeleteModalVisible] = useState(false);\n  const [isHovered, setIsHovered] = useState(false);\n  const dispatch = useDispatch();\n  const [form] = Form.useForm();\n  const handleEdit = () => {\n    setIsEditTodo(true);\n    form.setFieldsValue({\n      name\n    });\n  };\n  const handleDelete = () => {\n    setIsDeleteModalVisible(true);\n  };\n  const handleConfirmDelete = () => {\n    dispatch(deleteTodo({\n      id: todoId\n    }));\n    status === TodoStatus.COMPLETED ? dispatch(decrementCompleted()) : dispatch(decrementNotCompleted());\n    setIsDeleteModalVisible(false);\n  };\n  const handleCancelDelete = () => {\n    setIsDeleteModalVisible(false);\n  };\n  const handleMouseEnter = () => {\n    setIsHovered(true);\n  };\n  const handleMouseLeave = () => {\n    setIsHovered(false);\n  };\n  const onChange = e => {\n    const status = e.target.checked ? TodoStatus.COMPLETED : TodoStatus.NOT_COMPLETED;\n    dispatch(updateTodo({\n      id: todoId,\n      status\n    }));\n  };\n  const handleSubmit = useCallback(data => {\n    dispatch(updateTodo({\n      id: todoId,\n      ...data\n    }));\n    setIsEditTodo(false);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Space, {\n      style: {\n        height: \"40px\"\n      },\n      children: isEditTodo ? /*#__PURE__*/_jsxDEV(AddEditTodo, {\n        setIsEditMode: setIsEditTodo,\n        onSubmit: handleSubmit,\n        initialValues: {\n          name: name\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Space, {\n        direction: \"horizontal\",\n        size: \"middle\",\n        id: \"333333\",\n        onMouseEnter: handleMouseEnter,\n        onMouseLeave: handleMouseLeave,\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          onChange: onChange,\n          checked: status === TodoStatus.COMPLETED\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography.Title, {\n          level: 5,\n          style: {\n            color: \"#1890ff\",\n            margin: 0\n          },\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), isHovered && /*#__PURE__*/_jsxDEV(Space, {\n          style: {\n            height: '24px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"link\",\n            onClick: handleEdit,\n            icon: /*#__PURE__*/_jsxDEV(EditOutlined, {\n              style: {\n                color: \"#1890ff\",\n                fontSize: \"16px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 64\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"link\",\n            onClick: handleDelete,\n            children: /*#__PURE__*/_jsxDEV(DeleteOutlined, {\n              style: {\n                color: \"#ff4d4f\",\n                fontSize: \"16px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeleteConfirmationModal, {\n      isVisible: isDeleteModalVisible,\n      onCancel: handleCancelDelete,\n      onConfirm: handleConfirmDelete,\n      modalInformation: \"Are you sure you want to delete this todo?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Todo, \"v7jphSzOaAxv3Mk2zctyIXPJOBQ=\", false, function () {\n  return [useDispatch, Form.useForm];\n});\n_c = Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["useCallback","useState","Button","Space","Typography","Form","Checkbox","DeleteOutlined","EditOutlined","TodoStatus","deleteTodo","updateTodo","useDispatch","DeleteConfirmationModal","decrementCompleted","decrementNotCompleted","AddEditTodo","jsxDEV","_jsxDEV","Fragment","_Fragment","Todo","name","status","todoId","_s","isEditTodo","setIsEditTodo","isDeleteModalVisible","setIsDeleteModalVisible","isHovered","setIsHovered","dispatch","form","useForm","handleEdit","setFieldsValue","handleDelete","handleConfirmDelete","id","COMPLETED","handleCancelDelete","handleMouseEnter","handleMouseLeave","onChange","e","target","checked","NOT_COMPLETED","handleSubmit","data","children","style","height","setIsEditMode","onSubmit","initialValues","fileName","_jsxFileName","lineNumber","columnNumber","direction","size","onMouseEnter","onMouseLeave","Title","level","color","margin","type","onClick","icon","fontSize","isVisible","onCancel","onConfirm","modalInformation","_c","$RefreshReg$"],"sources":["/Users/apikosoftwareproperty792/Desktop/Work/TodoProject/src/components/Todo/Todo.tsx"],"sourcesContent":["import { FC, useCallback, useState } from \"react\"\nimport { Button, Space, Typography, Form, Checkbox, CheckboxProps } from \"antd\"\nimport { DeleteOutlined, EditOutlined } from \"@ant-design/icons\"\nimport { TodoStatus } from \"../../types/status\"\nimport { deleteTodo, updateTodo } from \"../../redux/TodoReducer\"\nimport { useDispatch } from \"react-redux\"\nimport { DeleteConfirmationModal } from \"../DeleteConfirmationModal\"\nimport { decrementCompleted, decrementNotCompleted } from \"../../redux/CounterReducer\"\nimport { AddEditTodo } from \"../AddEditTodo\"\n\n\ninterface TodoProps {\n  todoId: string\n  name: string\n  status: TodoStatus\n}\n\nexport const Todo: FC<TodoProps> = ({\n  name,\n  status,\n  todoId\n}) => {\n  const [isEditTodo, setIsEditTodo] = useState(false)\n  const [isDeleteModalVisible, setIsDeleteModalVisible] = useState(false)\n  const [isHovered, setIsHovered] = useState(false)\n  const dispatch = useDispatch()\n  const [form] = Form.useForm()\n\n  const handleEdit = (): void => {\n    setIsEditTodo(true)\n    form.setFieldsValue({\n      name\n    })\n  }\n\n  const handleDelete = (): void => {\n    setIsDeleteModalVisible(true)\n  }\n\n  const handleConfirmDelete = (): void => {\n    dispatch(deleteTodo({ id: todoId }))\n    status === TodoStatus.COMPLETED ? dispatch(decrementCompleted()) : dispatch(decrementNotCompleted())\n    setIsDeleteModalVisible(false)\n  }\n\n  const handleCancelDelete = (): void => {\n    setIsDeleteModalVisible(false)\n  }\n\n  const handleMouseEnter = (): void => {\n    setIsHovered(true)\n  }\n\n  const handleMouseLeave = (): void => {\n    setIsHovered(false)\n  }\n\n  const onChange: CheckboxProps['onChange'] = (e): void => {\n    const status = e.target.checked ? TodoStatus.COMPLETED : TodoStatus.NOT_COMPLETED\n    dispatch(updateTodo({ id: todoId, status }))\n  }\n\n  const handleSubmit = useCallback((data: any): void => {\n    dispatch(updateTodo({ id: todoId, ...data }))\n    setIsEditTodo(false)\n  }, [])\n\n\n  return (\n    <>\n      <Space style={{ height: \"40px\" }}>\n        {isEditTodo ?\n          <AddEditTodo setIsEditMode={setIsEditTodo} onSubmit={handleSubmit} initialValues={{ name: name }} />\n          :\n          <Space direction=\"horizontal\" size=\"middle\" id=\"333333\"\n            onMouseEnter={handleMouseEnter}\n            onMouseLeave={handleMouseLeave}\n          >\n            <Checkbox onChange={onChange} checked={status === TodoStatus.COMPLETED} />\n            <Typography.Title\n              level={5}\n              style={{ color: \"#1890ff\", margin: 0 }}\n            >\n              {name}\n            </Typography.Title>\n            {isHovered &&\n              <Space style={{ height: '24px' }} >\n                <Button type=\"link\" onClick={handleEdit} icon={<EditOutlined style={{ color: \"#1890ff\", fontSize: \"16px\" }} />} />\n                <Button type=\"link\" onClick={handleDelete}>\n                  <DeleteOutlined style={{ color: \"#ff4d4f\", fontSize: \"16px\" }} />\n                </Button>\n              </Space>\n            }\n          </Space>}\n      </Space >\n      <DeleteConfirmationModal\n        isVisible={isDeleteModalVisible}\n        onCancel={handleCancelDelete}\n        onConfirm={handleConfirmDelete}\n        modalInformation=\"Are you sure you want to delete this todo?\"\n      />\n    </>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}