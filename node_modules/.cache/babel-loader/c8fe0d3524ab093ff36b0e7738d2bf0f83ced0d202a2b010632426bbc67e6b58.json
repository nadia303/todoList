{"ast":null,"code":"var _jsxFileName = \"/Users/apikosoftwareproperty792/Desktop/Work/TodoProject/src/components/Todo/Todo.tsx\",\n  _s = $RefreshSig$();\nimport { useCallback, useRef, useState } from \"react\";\nimport { Button, Space, Typography, Form, Checkbox } from \"antd\";\nimport { DeleteOutlined, EditOutlined } from \"@ant-design/icons\";\nimport { TodoStatus } from \"../../types/status\";\nimport { deleteTodo, updateTodo } from \"../../redux/TodoReducer\";\nimport { useDispatch } from \"react-redux\";\nimport { DeleteConfirmationModal } from \"../DeleteConfirmationModal\";\nimport { decrementCompleted, decrementNotCompleted } from \"../../redux/CounterReducer\";\nimport { AddEditTodo } from \"../AddEditTodo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Todo = ({\n  name,\n  status,\n  todoId\n}) => {\n  _s();\n  const [isEditTodo, setIsEditTodo] = useState(false);\n  const [isDeleteModalVisible, setIsDeleteModalVisible] = useState(false);\n  const [isHovered, setIsHovered] = useState(false);\n  // const { maxTodoLength } = useSelector((state: RootState) => state.todos)\n  const dispatch = useDispatch();\n  const [form] = Form.useForm();\n  const editableAreaRef = useRef(null);\n  const handleEdit = () => {\n    setIsEditTodo(true);\n    form.setFieldsValue({\n      name\n    });\n  };\n  const handleDelete = () => {\n    setIsDeleteModalVisible(true);\n  };\n  const handleConfirmDelete = () => {\n    dispatch(deleteTodo({\n      id: todoId\n    }));\n    status === TodoStatus.COMPLETED ? dispatch(decrementCompleted()) : dispatch(decrementNotCompleted());\n    setIsDeleteModalVisible(false);\n  };\n  const handleCancelDelete = () => {\n    setIsDeleteModalVisible(false);\n  };\n  const handleMouseEnter = () => {\n    setIsHovered(true);\n  };\n  const handleMouseLeave = () => {\n    setIsHovered(false);\n  };\n  const hadleCancelEdit = () => {\n    setIsEditTodo(false);\n  };\n  const onChange = e => {\n    const status = e.target.checked ? TodoStatus.COMPLETED : TodoStatus.NOT_COMPLETED;\n    dispatch(updateTodo({\n      id: todoId,\n      status\n    }));\n  };\n\n  // const handleSubmit = (data: { data: Partial<ITodo> }): void => {\n  //   dispatch(updateTodo({ id: todoId, ...data }))\n  //   setIsEditTodo(false)\n  // }\n\n  const handleSubmit = useCallback(data => {\n    console.log({\n      data\n    });\n    console.log(\"Submit edit\");\n    // dispatch(updateTodo({ id: todoId, ...data }))\n    setIsEditTodo(false);\n  }, []);\n\n  // const handleOnCreate = useCallback((data: Omit<ITodo, 'id'>) => {\n  //   const status = data.status\n  //   status === TodoStatus.NOT_COMPLETED ? dispatch(incrementNotCompleted()) : dispatch(incrementCompleted())\n  //   dispatch(addTodo(data))\n  // }, [])\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Space, {\n      direction: \"horizontal\",\n      size: \"middle\",\n      onMouseEnter: handleMouseEnter,\n      onMouseLeave: handleMouseLeave,\n      ref: editableAreaRef,\n      style: {\n        display: 'flex',\n        alignItems: \"center\",\n        padding: \"16px\",\n        marginBottom: '12px',\n        border: \"1px solid #ccc\",\n        borderRadius: \"8px\",\n        background: \"#e6f7ff\",\n        width: \"400px\",\n        height: \"100px\"\n      },\n      children: isEditTodo ? /*#__PURE__*/_jsxDEV(AddEditTodo, {\n        visible: isEditTodo,\n        setIsEditMode: setIsEditTodo,\n        onSubmit: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)\n      // <Form\n      //   form={form}\n      //   name=\"validateOnly\"\n      //   layout=\"vertical\"\n      //   autoComplete=\"off\"\n      //   onFinish={handleSubmit}\n      // >\n      //   <Row>\n      //     <Col span={12}>\n      //       <Form.Item\n      //         label=\"Name\"\n      //         name=\"name\"\n      //         rules={[\n      //           {\n      //             required: true,\n      //             message: \"Please enter todo name\",\n      //           },\n      //           {\n      //             max: maxTodoLength,\n      //             message: `Todo text exceeds the maximum allowed length of ${maxTodoLength} characters`,\n      //           },\n      //         ]}\n      //       >\n      //         <Input />\n      //       </Form.Item>\n      //     </Col>\n      //     <Col span={12}>\n      //       <Space wrap>\n      //         <Button htmlType=\"submit\" icon={< CheckOutlined />} />\n      //         <Button type=\"link\" onClick={hadleCancelEdit} icon={<CloseOutlined />} />\n      //       </Space>\n      //     </Col>\n      //   </Row>\n      // </Form>\n      : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          onChange: onChange,\n          checked: status === TodoStatus.COMPLETED\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography.Title, {\n          level: 5,\n          style: {\n            color: \"#1890ff\",\n            margin: 0\n          },\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), isHovered && /*#__PURE__*/_jsxDEV(Space, {\n          wrap: true,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"link\",\n            onClick: handleEdit,\n            children: /*#__PURE__*/_jsxDEV(EditOutlined, {\n              style: {\n                color: \"#1890ff\",\n                fontSize: \"16px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"link\",\n            onClick: handleDelete,\n            children: /*#__PURE__*/_jsxDEV(DeleteOutlined, {\n              style: {\n                color: \"#ff4d4f\",\n                fontSize: \"16px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeleteConfirmationModal, {\n      isVisible: isDeleteModalVisible,\n      onCancel: handleCancelDelete,\n      onConfirm: handleConfirmDelete,\n      modalInformation: \"Are you sure you want to delete this todo?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Todo, \"CVMJIzefmjhPMmiCSV4LIUkCs3I=\", false, function () {\n  return [useDispatch, Form.useForm];\n});\n_c = Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["useCallback","useRef","useState","Button","Space","Typography","Form","Checkbox","DeleteOutlined","EditOutlined","TodoStatus","deleteTodo","updateTodo","useDispatch","DeleteConfirmationModal","decrementCompleted","decrementNotCompleted","AddEditTodo","jsxDEV","_jsxDEV","Fragment","_Fragment","Todo","name","status","todoId","_s","isEditTodo","setIsEditTodo","isDeleteModalVisible","setIsDeleteModalVisible","isHovered","setIsHovered","dispatch","form","useForm","editableAreaRef","handleEdit","setFieldsValue","handleDelete","handleConfirmDelete","id","COMPLETED","handleCancelDelete","handleMouseEnter","handleMouseLeave","hadleCancelEdit","onChange","e","target","checked","NOT_COMPLETED","handleSubmit","data","console","log","children","direction","size","onMouseEnter","onMouseLeave","ref","style","display","alignItems","padding","marginBottom","border","borderRadius","background","width","height","visible","setIsEditMode","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","Title","level","color","margin","wrap","type","onClick","fontSize","isVisible","onCancel","onConfirm","modalInformation","_c","$RefreshReg$"],"sources":["/Users/apikosoftwareproperty792/Desktop/Work/TodoProject/src/components/Todo/Todo.tsx"],"sourcesContent":["import { FC, useCallback, useEffect, useRef, useState } from \"react\"\nimport { Button, Space, Typography, Form, Checkbox, CheckboxProps, Input, Row, Col } from \"antd\"\nimport { CheckOutlined, CloseOutlined, DeleteOutlined, EditOutlined } from \"@ant-design/icons\"\nimport { ITodo } from \"../../types/todo\"\nimport { TodoStatus } from \"../../types/status\"\nimport { deleteTodo, updateTodo } from \"../../redux/TodoReducer\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { DeleteConfirmationModal } from \"../DeleteConfirmationModal\"\nimport { RootState } from \"../../redux\"\nimport { decrementCompleted, decrementNotCompleted } from \"../../redux/CounterReducer\"\nimport { AddEditTodo } from \"../AddEditTodo\"\n\n\ninterface TodoProps {\n  todoId: string\n  name: string\n  status: TodoStatus\n}\n\nexport const Todo: FC<TodoProps> = ({\n  name,\n  status,\n  todoId\n}) => {\n  const [isEditTodo, setIsEditTodo] = useState(false)\n  const [isDeleteModalVisible, setIsDeleteModalVisible] = useState(false)\n  const [isHovered, setIsHovered] = useState(false)\n  // const { maxTodoLength } = useSelector((state: RootState) => state.todos)\n  const dispatch = useDispatch()\n  const [form] = Form.useForm()\n  const editableAreaRef = useRef<HTMLDivElement>(null)\n\n  const handleEdit = (): void => {\n    setIsEditTodo(true)\n    form.setFieldsValue({\n      name\n    })\n  }\n\n  const handleDelete = (): void => {\n    setIsDeleteModalVisible(true)\n  }\n\n  const handleConfirmDelete = (): void => {\n    dispatch(deleteTodo({ id: todoId }))\n    status === TodoStatus.COMPLETED ? dispatch(decrementCompleted()) : dispatch(decrementNotCompleted())\n    setIsDeleteModalVisible(false)\n  }\n\n  const handleCancelDelete = (): void => {\n    setIsDeleteModalVisible(false)\n  }\n\n  const handleMouseEnter = (): void => {\n    setIsHovered(true)\n  }\n\n  const handleMouseLeave = (): void => {\n    setIsHovered(false)\n  }\n\n  const hadleCancelEdit = (): void => {\n    setIsEditTodo(false)\n  }\n\n  const onChange: CheckboxProps['onChange'] = (e): void => {\n    const status = e.target.checked ? TodoStatus.COMPLETED : TodoStatus.NOT_COMPLETED\n    dispatch(updateTodo({ id: todoId, status }))\n  }\n\n  // const handleSubmit = (data: { data: Partial<ITodo> }): void => {\n  //   dispatch(updateTodo({ id: todoId, ...data }))\n  //   setIsEditTodo(false)\n  // }\n\n  const handleSubmit = useCallback((data: ITodo): void => {\n    console.log({ data })\n    console.log(\"Submit edit\")\n    // dispatch(updateTodo({ id: todoId, ...data }))\n    setIsEditTodo(false)\n  }, [])\n\n  // const handleOnCreate = useCallback((data: Omit<ITodo, 'id'>) => {\n  //   const status = data.status\n  //   status === TodoStatus.NOT_COMPLETED ? dispatch(incrementNotCompleted()) : dispatch(incrementCompleted())\n  //   dispatch(addTodo(data))\n  // }, [])\n\n  return (\n    <>\n      <Space direction=\"horizontal\" size=\"middle\"\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n        ref={editableAreaRef}\n        style={{\n          display: 'flex',\n          alignItems: \"center\",\n          padding: \"16px\",\n          marginBottom: '12px',\n          border: \"1px solid #ccc\",\n          borderRadius: \"8px\",\n          background: \"#e6f7ff\",\n          width: \"400px\",\n          height: \"100px\"\n        }}\n      >\n        {isEditTodo ?\n          <AddEditTodo visible={isEditTodo} setIsEditMode={setIsEditTodo} onSubmit={handleSubmit} />\n          // <Form\n          //   form={form}\n          //   name=\"validateOnly\"\n          //   layout=\"vertical\"\n          //   autoComplete=\"off\"\n          //   onFinish={handleSubmit}\n          // >\n          //   <Row>\n          //     <Col span={12}>\n          //       <Form.Item\n          //         label=\"Name\"\n          //         name=\"name\"\n          //         rules={[\n          //           {\n          //             required: true,\n          //             message: \"Please enter todo name\",\n          //           },\n          //           {\n          //             max: maxTodoLength,\n          //             message: `Todo text exceeds the maximum allowed length of ${maxTodoLength} characters`,\n          //           },\n          //         ]}\n          //       >\n          //         <Input />\n          //       </Form.Item>\n          //     </Col>\n          //     <Col span={12}>\n          //       <Space wrap>\n          //         <Button htmlType=\"submit\" icon={< CheckOutlined />} />\n          //         <Button type=\"link\" onClick={hadleCancelEdit} icon={<CloseOutlined />} />\n          //       </Space>\n          //     </Col>\n          //   </Row>\n          // </Form>\n          :\n          <>\n            <Checkbox onChange={onChange} checked={status === TodoStatus.COMPLETED} />\n            <Typography.Title\n              level={5}\n              style={{ color: \"#1890ff\", margin: 0 }}\n            >\n              {name}\n            </Typography.Title>\n            {isHovered &&\n              <Space wrap>\n                <Button type=\"link\" onClick={handleEdit}>\n                  <EditOutlined style={{ color: \"#1890ff\", fontSize: \"16px\" }} />\n                </Button>\n                <Button type=\"link\" onClick={handleDelete}>\n                  <DeleteOutlined style={{ color: \"#ff4d4f\", fontSize: \"16px\" }} />\n                </Button>\n              </Space>\n            }\n          </>}\n      </Space>\n      <DeleteConfirmationModal\n        isVisible={isDeleteModalVisible}\n        onCancel={handleCancelDelete}\n        onConfirm={handleConfirmDelete}\n        modalInformation=\"Are you sure you want to delete this todo?\"\n      />\n    </>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}