{"ast":null,"code":"var _jsxFileName = \"/Users/apikosoftwareproperty792/Desktop/Work/TodoProject/src/components/Filter/Filter.tsx\",\n  _s = $RefreshSig$();\nimport { Radio } from \"antd\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// interface FilterProps {\n//     todos: ITodo[]\n// }\n\nexport const Filter = () => {\n  _s();\n  const [filterType, setFilterType] = useState('all');\n  return /*#__PURE__*/_jsxDEV(Radio.Group, {\n    onChange: e => setFilterType(e.target.value),\n    value: filterType,\n    children: [/*#__PURE__*/_jsxDEV(Radio.Button, {\n      value: \"all\",\n      children: \"All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Radio.Button, {\n      value: \"completed\",\n      children: \"Completed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Radio.Button, {\n      value: \"current\",\n      children: \"Not Completed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_s(Filter, \"st+WSwhofKpQCYAKPWTiCrTMyIE=\");\n_c = Filter;\nvar _c;\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"names":["Radio","useState","jsxDEV","_jsxDEV","Filter","_s","filterType","setFilterType","Group","onChange","e","target","value","children","Button","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/apikosoftwareproperty792/Desktop/Work/TodoProject/src/components/Filter/Filter.tsx"],"sourcesContent":["import { Radio, RadioChangeEvent } from \"antd\"\nimport { useState } from \"react\"\nimport { ITodo } from \"../../types/todo\"\n\n// interface FilterProps {\n//     todos: ITodo[]\n// }\n\nexport const Filter: React.FC = () => {\n  const [filterType, setFilterType] = useState('all')\n  return (\n    <Radio.Group\n      onChange={(e: React.MouseEvent<HTMLLabelElement>) => setFilterType(e.target.value)}\n      value={filterType}\n    >\n      <Radio.Button value=\"all\">All</Radio.Button>\n      <Radio.Button value=\"completed\">Completed</Radio.Button>\n      <Radio.Button value=\"current\">Not Completed</Radio.Button>\n    </Radio.Group>\n\n  )\n}"],"mappings":";;AAAA,SAASA,KAAK,QAA0B,MAAM;AAC9C,SAASC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGhC;AACA;AACA;;AAEA,OAAO,MAAMC,MAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACnD,oBACEE,OAAA,CAACH,KAAK,CAACQ,KAAK;IACVC,QAAQ,EAAGC,CAAqC,IAAKH,aAAa,CAACG,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;IACnFA,KAAK,EAAEN,UAAW;IAAAO,QAAA,gBAElBV,OAAA,CAACH,KAAK,CAACc,MAAM;MAACF,KAAK,EAAC,KAAK;MAAAC,QAAA,EAAC;IAAG;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAc,CAAC,eAC5Cf,OAAA,CAACH,KAAK,CAACc,MAAM;MAACF,KAAK,EAAC,WAAW;MAAAC,QAAA,EAAC;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAc,CAAC,eACxDf,OAAA,CAACH,KAAK,CAACc,MAAM;MAACF,KAAK,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAc,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAGlB,CAAC;AAAAb,EAAA,CAbYD,MAAgB;AAAAe,EAAA,GAAhBf,MAAgB;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}